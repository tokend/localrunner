version: '3.3'

services:
  docker-host:
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure
  tcp_message_emitter:
    depends_on: [ docker-host ]
    image: alpine
    command: [ "sh", "-c", "while :; do date; sleep 1; done | nc 'docker-host' 2323 -v"]
  udp_message_emitter:
    depends_on: [ docker-host ]
    image: alpine
    command: [ "sh", "-c", "while :; do date; sleep 1; done | nc 'docker-host' 5353 -u -v"]
  traefik:
    image: traefik:v2.0
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/traefik.yaml:/traefik.yaml
  cop:
    image: tokend/traefik-cop:1.0.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/cop.yaml:/config.yaml
    entrypoint: sh -c "traefik-cop run"
  errors:
    image: tokend/error-handler-svc:0.0.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/errors.yaml:/config.yaml
    entrypoint: sh -c "error-handler-svc run service"
  upstream:
    image: nginx
    restart: unless-stopped
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:80"
    labels:
      - "traefik.frontend.passHostHeader=true"
  adks:
    image: tokend/adks:1.0.0
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
      - adks_db
      - marketplace
    ports:
      - 8006:80
    volumes:
      - ./configs/adks.toml:/config.toml
  adks_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - POSTGRES_USER=adks
      - POSTGRES_PASSWORD=adks
      - POSTGRES_DB=adks
      - PGDATA=/pgdata
    volumes:
      - adks-data:/pgdata
  redis:
    image: redis:5.0-alpine
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    volumes:
      - redis-data:/data
    command:
      - redis-server
      - --appendonly
      - "yes"
  core:
    image: tokend/core:3.7.0-x.3
    depends_on:
      - traefik
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/data/pgdata
      - ENSUREDB=1
      - CONFIG=/core-config.ini
    volumes:
      - ./configs/core.ini:/core-config.ini
      - core-data:/data
    labels:
      - "autoheal=true"
      - "traefik.enabled=false"
  horizon:
    image: tokend/horizon:3.10.0-x.3
    depends_on:
      - core
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/data/pgdata
    volumes:
      - ./configs/horizon.yaml:/config.yaml
      - horizon-data:/data
  api:
    image: tokend/identity:4.5.5-rc.0
    restart: unless-stopped
    depends_on:
      - horizon
      - api_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/api.yml:/config.yaml
    command: run
  api_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api
      - PGDATA=/pgdata
    volumes:
      - api-data:/pgdata
  initscripts:
    image: tokend/terraform-provider-tokend:1.3.4
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
      - storage
    volumes:
      - ./terraform:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  web_client:
    image: registry.gitlab.com/tokend/blockparty/web-client:389cbe4d0f9f8f84e64dd8b24c690d024fd1ef90
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    volumes:
      - ./configs/client.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8060:80
  admin_client:
    image: registry.gitlab.com/tokend/blockparty/admin-panel:1.1.0-rc.1
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    volumes:
      - ./configs/client.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8070:80
  storage:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    restart: unless-stopped
    entrypoint: "sh"
    labels:
      - "traefik.enabled=false"
    command: -c "mkdir -p /data/tfstate && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=off
    volumes:
      - storage-data:/data
  nft-svc:
    image: registry.gitlab.com/tokend/blockparty/nft-svc:5f38bb90be8b54c2e50bcd7859d32813903060ee
    restart: unless-stopped
    entrypoint: sh -c "nft-svc migrate up && nft-svc run"
    depends_on:
      - horizon
      - nft_svc_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/nft-svc.yaml:/config.yaml
  nft_svc_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - POSTGRES_USER=nft
      - POSTGRES_PASSWORD=nft
      - POSTGRES_DB=nft
      - PGDATA=/pgdata
    volumes:
      - nft-data:/pgdata
  marketplace:
    image: registry.gitlab.com/tokend/blockparty/marketplace-v2-svc:f9374d8e1109ab8509d59fc9e62ef65009692540
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - marketplace_db
    volumes:
      - ./configs/marketplace.yaml:/config.yaml
    entrypoint: sh -c "marketplace-v2-svc migrate up && marketplace-v2-svc run"
  details:
    image: mydetails:latest
    restart: unless-stopped
    entrypoint: sh -c "details-updater migrate up && details-updater run"
    depends_on:
      - horizon
      - details_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/details.yaml:/config.yaml
  details_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - POSTGRES_USER=details
      - POSTGRES_PASSWORD=details
      - POSTGRES_DB=details
      - PGDATA=/pgdata
    volumes:
      - details-data:/pgdata
  marketplace_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=marketplace
      - POSTGRES_PASSWORD=marketplace
      - POSTGRES_DB=marketplace
      - PGDATA=/pgdata
    volumes:
      - marketplace-data:/pgdata
  dns:
    image: registry.gitlab.com/tokend/blockparty/dns-svc:0.5.3
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - dns_db
    volumes:
      - ./configs/dns.yaml:/config.yaml
    entrypoint: sh -c "dns-svc migrate up && dns-svc run"
  dns_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=dns
      - POSTGRES_PASSWORD=dns
      - POSTGRES_DB=dns
      - PGDATA=/pgdata
    volumes:
      - dns-data:/pgdata
  identity-storage:
    image: registry.gitlab.com/tokend/identity-storage:0086e9381a6cd4f1993e3e585cca3ea771a9d0a4
    labels:
      - "traefik.enabled=false"
    environment:
      - KV_VIPER_FILE=/config.yaml
    restart: unless-stopped
    depends_on:
      - horizon
      - identity_db
    volumes:
      - ./configs/identity-storage.yaml:/config.yaml
    entrypoint: sh -c "identity-storage migrate up && identity-storage run service"
  identity_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=identity
      - POSTGRES_PASSWORD=identity
      - POSTGRES_DB=identity
      - PGDATA=/pgdata
    volumes:
      - identity-data:/pgdata

  ## Ethereum
  bridge:
    image: registry.gitlab.com/tokend/blockparty/erc721-bridge-eth:cfc52b667c5764ae707071e2ef154d3e0db8aa18
    restart: unless-stopped
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc721-bridge.yaml:/config.yaml
    entrypoint: "erc721-bridge-eth"
    command: ["run"]
  stripe:
    image: registry.gitlab.com/tokend/blockparty/stripe-svc:67d22b89195530d267fd2f69db3829b1ab47332e
    restart: unless-stopped
    volumes:
      - ./configs/stripe.yaml:/config.yaml
    environment:
      - KV_VIPER_FILE=/config.yaml
    entrypoint: sh -c "stripe-svc migrate up && stripe-svc run"
    command: run
    depends_on:
      - horizon
  templatesprovider:
    image: tokend/templates-svc:1.1.0
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/templatesprovider.yaml:/config.yaml
    command:
      - 'run'
      - 'service'
  templates:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    restart: unless-stopped
    entrypoint: "sh"
    command: -c "mkdir -p /data/templates && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=on
    ports:
      - 9000:9000
    volumes:
      - templates-data:/data
  notificator:
    image: tokend/notificator:0.5.2
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    depends_on:
      - horizon
      - notificator_db
    volumes:
      - ./configs/notificator.yaml:/config.yaml
    command:
      - "notificator"
      - "--config"
      - "/config.yaml"
      - "--migrations"
      - "/migrations"
      - "run"
  notificator_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=notificator
      - POSTGRES_PASSWORD=notificator
      - POSTGRES_DB=notificator
      - PGDATA=/pgdata
    volumes:
      - notificator-data:/pgdata
  stripe_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=stripe
      - POSTGRES_PASSWORD=stripe
      - POSTGRES_DB=stripe
      - PGDATA=/pgdata
    volumes:
      - stripe-data:/pgdata
volumes:
  identity-data:
  adks-data:
  api-data:
  core-data:
  horizon-data:
  storage-data:
  redis-data:
  nft-data:
  marketplace-data:
  dns-data:
  templates-data:
  notificator-data:
  stripe-data: